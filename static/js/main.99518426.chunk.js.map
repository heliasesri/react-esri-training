{"version":3,"sources":["components/Search/index.js","components/SimpelImage/index.js","components/FeatureLayer/index.js","handy/functions/index.js","components/Track/index.js","components/ViewExtentChanges/index.js","components/Expand/index.js","components/SaveWebMap/index.js","components/Map/index.js","components/Scene/index.js","components/NotFoundPage/index.js","components/SwitchDimension/index.js","components/View/index.js","components/Router/index.js","App.js","serviceWorker.js","index.js"],"names":["CreateSearch","view","loadModules","then","searchWidget","Search","ui","add","position","index","catch","err","console","error","styles","image","width","height","SimpelImageComponent","src","alt","style","AddFeatureLayer","map","id","FeatureLayer","i","length","featureLayer","portalItem","log","ReactElementToDomElement","reactElement","domElement","container","document","createElement","ReactDOM","render","CreateTrack","trackhWidget","Track","OnViewChanges","viewProperties","whenTrue","center","zoom","AddExpand","component","icon","expandWidget","Expand","content","expandIconClass","sidebarDiv","padding","overlayDiv","zIndex","margin","top","right","bottom","left","backgroundColor","border","esriHeading","marginTop","littleSpacing","marginBottom","loading","color","SaveWebMapComponent","state","isDisabled","headStatus","infoStatus","showStatus","inputRef","React","createRef","checkSave","props","saveMap","updateFrom","save","item","itemPageUrl","portal","url","info","Fragment","target","rel","href","updateStatusMessage","handleChange","event","setState","inputValue","value","head","this","addEventListener","removeEventListener","className","type","disabled","ref","input","CircularProgress","onClick","Component","MapComponent","screenWidth","window","innerWidth","screenHeight","innerHeight","dimension","updateDimensions","getScreenSize","getMapAndView","mapView","showComponent","loadComponents","switchComponent","_SaveWebMapComponent","SaveWebMap","history","screenSize","class","mapProperties","basemap","loaderOptions","css","onLoad","SceneComponent","ground","NotFoundPage","switchButton","SwitchComponent","change","changeFunction","ViewComponent","changeDimenion","switch","MyComponent","showView","Router","undefined","mode","basename","process","exact","path","View","Map","Scene","App","createBrowserHistory","Boolean","location","hostname","match","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99518426.chunk.js","sourcesContent":["import { loadModules } from 'esri-loader';\r\n\r\nconst CreateSearch = view => {\r\n    loadModules(['esri/widgets/Search'])\r\n        .then(([Search]) => {\r\n            const searchWidget = new Search({\r\n                view: view\r\n            });\r\n\r\n            view.ui.add(searchWidget, {\r\n                position: 'top-right',\r\n                index: 0\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n};\r\n\r\nexport default CreateSearch;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n    image: {\r\n        width: 240,\r\n        height: 120\r\n    }\r\n};\r\n\r\nconst SimpelImageComponent = () => {\r\n    return (\r\n        <img\r\n            src=\"https://media.makeameme.org/created/component-component-everywhere.jpg\"\r\n            alt=\"Smiley face\"\r\n            style={styles.image}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SimpelImageComponent;\r\n","import { loadModules } from 'esri-loader';\r\n\r\nconst AddFeatureLayer = (map, id) => {\r\n    if (map && id)\r\n        loadModules(['esri/layers/FeatureLayer'])\r\n            .then(([FeatureLayer]) => {\r\n                for (let i = 0; i < id.length; i++) {\r\n                    const featureLayer = new FeatureLayer({\r\n                        portalItem: {\r\n                            id: id[i]\r\n                        }\r\n                    });\r\n\r\n                    console.log(featureLayer)\r\n\r\n                    map.add(featureLayer);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n};\r\n\r\nexport default AddFeatureLayer;\r\n","import ReactDOM from 'react-dom';\r\n\r\nexport const ReactElementToDomElement = (reactElement, domElement = 'div') => {\r\n    const container = document.createElement(domElement);\r\n    ReactDOM.render(reactElement, container);\r\n    return container;\r\n};\r\n\r\n","import { loadModules } from 'esri-loader';\r\n\r\nconst CreateTrack = view => {\r\n    loadModules([\"esri/widgets/Track\"])\r\n        .then(([Track]) => {\r\n            const trackhWidget = new Track({\r\n                view: view\r\n            });\r\n\r\n            view.ui.add(trackhWidget, {\r\n                position: 'top-left'\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n};\r\n\r\nexport default CreateTrack;\r\n","import { loadModules } from 'esri-loader';\r\n\r\nconst OnViewChanges = (view, viewProperties) => {\r\n    view &&\r\n        loadModules(['esri/core/watchUtils'])\r\n            .then(([watchUtils]) => {\r\n                watchUtils.whenTrue(view, 'stationary', function() {\r\n                    viewProperties.center = view.center;\r\n                    viewProperties.zoom = view.zoom;\r\n                    console.log('Viewpoint Updated');\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n};\r\n\r\nexport default OnViewChanges;\r\n","import { loadModules } from 'esri-loader';\r\n\r\nconst AddExpand = (view, component, icon = 'esri-icon-applications') => {\r\n    component &&\r\n        view &&\r\n        loadModules(['esri/widgets/Expand'])\r\n            .then(([Expand]) => {\r\n                const expandWidget = new Expand({\r\n                    view: view,\r\n                    content: component,\r\n                    expandIconClass: icon //https://developers.arcgis.com/javascript/latest/guide/esri-icon-font/index.html\r\n                });\r\n\r\n                /*  const expandTest = new Expand({\r\n                    view: view,\r\n                    content: expandWidget\r\n                }) */\r\n\r\n                view.ui.add(expandWidget, {\r\n                    position: 'top-right'\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n};\r\n\r\nexport default AddExpand;\r\n","import React, { Component } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst styles = {\r\n    sidebarDiv: {\r\n        width: '240px',\r\n        padding: '10px',\r\n        height: 'auto'\r\n    },\r\n    overlayDiv: {\r\n        zIndex: 1,\r\n        position: 'fixed',\r\n        margin: 'auto auto',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        width: '280px',\r\n        height: '180px',\r\n        padding: '10px',\r\n        backgroundColor: 'white',\r\n        border: '1px solid grey'\r\n    },\r\n    esriHeading: {\r\n        marginTop: 0\r\n    },\r\n    littleSpacing: {\r\n        marginBottom: '2em'\r\n    },\r\n    loading: {\r\n        color: 'white',\r\n        width: '18px',\r\n        height: '18px'\r\n    }\r\n};\r\n\r\nclass SaveWebMapComponent extends Component {\r\n    state = {\r\n        isDisabled: true,\r\n        headStatus: '',\r\n        infoStatus: '',\r\n        showStatus: false,\r\n        loading: false\r\n    };\r\n\r\n    inputRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.setState({ isDisabled: false });\r\n        this.inputRef.addEventListener('click', this.checkSave);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.inputRef.removeEventListener('click', this.checkSave);\r\n    }\r\n\r\n    checkSave = () => {\r\n        const { map, view } = this.props;\r\n        const { loading } = this.state;\r\n        if (!map || !view) return console.log('Map or View is not available.');\r\n        else if (loading) return console.log('Save is still saving.');\r\n        else this.saveMap(map, view);\r\n    };\r\n\r\n    saveMap = (map, view) => {\r\n        map.updateFrom(view);\r\n        map.save()\r\n            .then(item => {\r\n                var itemPageUrl =\r\n                    item.portal.url + '/home/item.html?id=' + item.id;\r\n                var info = (\r\n                    <React.Fragment>\r\n                        Successfully saved:{' '}\r\n                        <i>\r\n                            <a\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                href={itemPageUrl}\r\n                            >\r\n                                WebMap\r\n                            </a>\r\n                        </i>\r\n                    </React.Fragment>\r\n                );\r\n                this.updateStatusMessage('Save WebMap', info);\r\n            })\r\n            .catch(error => {\r\n                this.updateStatusMessage('Save WebMap', `Error: ${error}`);\r\n            });\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ inputValue: event.target.value });\r\n    };\r\n\r\n    updateStatusMessage = (head, info) => {\r\n        this.setState({\r\n            headStatus: head,\r\n            infoStatus: info,\r\n            showStatus: true,\r\n            loading: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            isDisabled,\r\n            headStatus,\r\n            infoStatus,\r\n            showStatus,\r\n            loading\r\n        } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div\r\n                    id=\"sidebarDiv\"\r\n                    style={styles.sidebarDiv}\r\n                    className=\"esri-widget\"\r\n                >\r\n                    <h4 style={styles.esriHeading} className=\"esri-heading\">\r\n                        Save WebMap\r\n                    </h4>\r\n                    <span\r\n                        type=\"button\"\r\n                        value=\"Save\"\r\n                        disabled={isDisabled}\r\n                        className=\"esri-button\"\r\n                        ref={input => {\r\n                            this.inputRef = input;\r\n                        }}\r\n                    >\r\n                        {loading ? (\r\n                            <CircularProgress\r\n                                style={styles.loading}\r\n                                color=\"inherit\"\r\n                            />\r\n                        ) : (\r\n                            <>Save</>\r\n                        )}\r\n                    </span>\r\n                    {showStatus && (\r\n                        <div\r\n                            id=\"overlayDiv\"\r\n                            style={styles.overlayDiv}\r\n                            className=\"esri-widget\"\r\n                        >\r\n                            <h4\r\n                                style={styles.esriHeading}\r\n                                className=\"esri-heading\"\r\n                            >\r\n                                {headStatus}\r\n                            </h4>\r\n                            <div style={styles.littleSpacing}>{infoStatus}</div>\r\n\r\n                            <input\r\n                                type=\"button\"\r\n                                value=\"OK\"\r\n                                className=\"esri-button\"\r\n                                onClick={() => {\r\n                                    this.setState({ showStatus: false });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SaveWebMapComponent;\r\n","import React, { Component } from 'react';\r\nimport { WebMap } from '@esri/react-arcgis';\r\nimport CreateSearch from '../Search';\r\n\r\nimport SimpelImageComponent from '../SimpelImage';\r\nimport AddFeatureLayer from '../FeatureLayer';\r\nimport { ReactElementToDomElement } from '../../handy/functions';\r\nimport CreateTrack from '../Track';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport OnViewChanges from '../ViewExtentChanges';\r\nimport AddExpand from '../Expand';\r\nimport SaveWebMapComponent from '../SaveWebMap';\r\n\r\nclass MapComponent extends Component {\r\n    static propTypes = {\r\n        featureLayer: PropTypes.array,\r\n        switchComponent: PropTypes.func.isRequired,\r\n        viewProperties: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        screenWidth: window.innerWidth,\r\n        screenHeight: window.innerHeight,\r\n        dimension: '2D'\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.updateDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateDimensions);\r\n    }\r\n\r\n    updateDimensions = () => {\r\n        this.setState({\r\n            screenWidth: window.innerWidth,\r\n            screenHeight: window.innerHeight\r\n        });\r\n    };\r\n\r\n    getScreenSize = () => {\r\n        const { screenWidth, screenHeight } = this.state;\r\n        const height = screenHeight * 0.999; //* 0.999 for no scroll to fit in the page\r\n        const width = screenWidth * 0.999;\r\n        return { height, width };\r\n    };\r\n\r\n    getMapAndView = (map, mapView) => {\r\n        this.setState({\r\n            map: map,\r\n            view: mapView,\r\n            showComponent: true\r\n        });\r\n    };\r\n\r\n    loadComponents = () => {\r\n        const { view, map } = this.state;\r\n        if (view) {\r\n            OnViewChanges(view, this.props.viewProperties);\r\n            CreateSearch(view);\r\n            CreateTrack(view);\r\n            AddExpand(view, ReactElementToDomElement(SimpelImageComponent()));\r\n\r\n            AddFeatureLayer(map, this.props.featureLayer);\r\n\r\n            view.ui.add(\r\n                ReactElementToDomElement(this.props.switchComponent()),\r\n                {\r\n                    position: 'top-left',\r\n                    index: 0\r\n                }\r\n            );\r\n\r\n            const _SaveWebMapComponent = (\r\n                <SaveWebMapComponent\r\n                    history={this.props.history}\r\n                    view={view}\r\n                    map={map}\r\n                />\r\n            );\r\n            AddExpand(\r\n                view,\r\n                ReactElementToDomElement(_SaveWebMapComponent),\r\n                'esri-icon-save'\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const screenSize = this.getScreenSize();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <WebMap\r\n                    id=\"6ca0bacba6524ef6bb24ec6a56f51be9\"\r\n                    style={screenSize}\r\n                    class=\"full-screen-map\"\r\n                    mapProperties={{ basemap: 'streets' }}\r\n                    loaderOptions={{ css: true }}\r\n                    viewProperties={this.props.viewProperties}\r\n                    onLoad={(map, mapView) => {\r\n                        this.getMapAndView(map, mapView);\r\n                        this.loadComponents();\r\n                    }}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapComponent;\r\n","// not supported in 2d => SceneLayer, IntegratedMeshLayer, and PointCloudLayer.\r\nimport React, { Component } from 'react';\r\nimport { WebScene } from '@esri/react-arcgis';\r\nimport CreateSearch from '../Search';\r\nimport AddFeatureLayer from '../FeatureLayer';\r\nimport CreateTrack from '../Track';\r\n\r\nimport SimpelImageComponent from '../SimpelImage';\r\nimport { ReactElementToDomElement } from '../../handy/functions';\r\nimport OnViewChanges from '../ViewExtentChanges';\r\nimport AddExpand from '../Expand';\r\nimport SaveWebMapComponent from '../SaveWebMap';\r\n\r\nclass SceneComponent extends Component {\r\n    state = {\r\n        screenWidth: window.innerWidth,\r\n        screenHeight: window.innerHeight\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.updateDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateDimensions);\r\n    }\r\n\r\n    updateDimensions = () => {\r\n        this.setState({\r\n            screenWidth: window.innerWidth,\r\n            screenHeight: window.innerHeight\r\n        });\r\n    };\r\n    getScreenSize = () => {\r\n        const { screenWidth, screenHeight } = this.state;\r\n        const height = screenHeight * 0.999; //* 0.999 for no scroll to fit in the page\r\n        const width = screenWidth * 0.999;\r\n        return { height, width };\r\n    };\r\n\r\n    getMapAndView = (map, mapView) => {\r\n        this.setState({\r\n            map: map,\r\n            view: mapView,\r\n            showComponent: true\r\n        });\r\n    };\r\n\r\n    loadComponents = () => {\r\n        const { view, map } = this.state;\r\n        if (view) {\r\n            OnViewChanges(view, this.props.viewProperties);\r\n            CreateSearch(view);\r\n            CreateTrack(view);\r\n            AddFeatureLayer(map, this.props.featureLayer);\r\n\r\n            const _SaveWebMapComponent = (\r\n                <SaveWebMapComponent view={view} map={map} />\r\n            );\r\n            AddExpand(\r\n                view,\r\n                ReactElementToDomElement(_SaveWebMapComponent),\r\n                'esri-icon-save'\r\n            );\r\n\r\n            view.ui.add(ReactElementToDomElement(SimpelImageComponent()), {\r\n                position: 'top-right',\r\n                index: 1\r\n            });\r\n\r\n            view.ui.add(\r\n                ReactElementToDomElement(this.props.switchComponent()),\r\n                {\r\n                    position: 'top-left',\r\n                    index: 0\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const screenSize = this.getScreenSize();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <WebScene\r\n                    id=\"2b8ae801e0cc43f5a7b4b1f6f4d9b579\"\r\n                    style={screenSize}\r\n                    class=\"full-screen-map\"\r\n                    mapProperties={{\r\n                        basemap: 'dark-gray',\r\n                        ground: 'world-elevation'\r\n                    }}\r\n                    loaderOptions={{ css: true }}\r\n                    viewProperties={this.props.viewProperties}\r\n                    onLoad={(map, mapView) => {\r\n                        this.getMapAndView(map, mapView);\r\n                        this.loadComponents();\r\n                    }}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SceneComponent;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>NOT FOUND 404</h1>\r\n)\r\n\r\nexport default NotFoundPage;","import React, { Component } from 'react';\r\n\r\nconst styles = {\r\n    switchButton: {\r\n        border: 'none'\r\n        /* boxShadow: 'rgba(0, 0, 0, 0.3) 0px 1px 2px' */\r\n    }\r\n};\r\n\r\nclass SwitchComponent extends Component {\r\n    change = () => {\r\n        if (!this.props.changeFunction)\r\n            return console.log('This function is not configured');\r\n\r\n        this.props.changeFunction();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.dimension && (\r\n                    <button\r\n                        id=\"switch-btn\"\r\n                        style={styles.switchButton}\r\n                        className=\" esri-widget--button esri-widget esri-interactive\"\r\n                        onClick={() => {\r\n                            this.change();\r\n                        }}\r\n                    >\r\n                        {this.props.dimension}\r\n                    </button>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SwitchComponent;\r\n","import React, { Component } from 'react';\r\nimport SwitchComponent from '../SwitchDimension';\r\nimport MapComponent from '../Map';\r\nimport SceneComponent from '../Scene';\r\n\r\nclass ViewComponent extends Component {\r\n    state = {\r\n        dimension: '2D',\r\n        featureLayer: [\r\n            /* 'a79a3e4dc55343b08543b1b6133bfb90', \r\n             '6996f03a1b364dbab4008d99380370ed'  */\r\n            // order the layer\r\n        ],\r\n        viewProperties: {\r\n            center: [4.27583, 50.80474], //lon , lat\r\n            zoom: 6\r\n        }\r\n    };\r\n\r\n    changeDimenion = () => {\r\n        this.setState({\r\n            dimension: this.state.dimension === '2D' ? '3D' : '2D'\r\n        });\r\n    };\r\n\r\n    switch = () => (\r\n        <SwitchComponent\r\n            dimension={this.state.dimension}\r\n            changeFunction={this.changeDimenion}\r\n        />\r\n    );\r\n\r\n    showComponent = MyComponent => (\r\n        <MyComponent\r\n            switchComponent={this.switch}\r\n            featureLayer={this.state.featureLayer}\r\n            viewProperties={this.state.viewProperties}\r\n        ></MyComponent>\r\n    );\r\n\r\n    showView = () => {\r\n        switch (this.state.dimension) {\r\n            case '2D':\r\n                return this.showComponent(MapComponent);\r\n\r\n            case '3D':\r\n                return this.showComponent(SceneComponent);\r\n            default:\r\n                return <div>Searching ...</div>;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment>{this.showView()}</React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default ViewComponent;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport MapComponent from '../Map';\r\nimport SceneComponent from '../Scene';\r\nimport NotFoundPage from '../NotFoundPage';\r\nimport ViewComponent from '../View';\r\n\r\nclass Router extends Component {\r\n    state = {\r\n        position: undefined,\r\n        mode: undefined\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"(/|/view|/home)\"\r\n                        component={() => <ViewComponent/>}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"(/map)\"\r\n                        component={() => <MapComponent />}\r\n                    />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/scene\"\r\n                        component={() => <SceneComponent />}\r\n                    />\r\n                    <Route component={() => <NotFoundPage />} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport Router from './components/Router';\r\nimport { createBrowserHistory } from 'history'\r\n\r\nfunction App() {\r\n    return (\r\n        <React.Fragment>\r\n            <Router history={createBrowserHistory()} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}